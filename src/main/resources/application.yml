server:
  port: 8080
  servlet:
    context-path: /lego
  tomcat:
    uri-encoding: UTF-8

# 开发环境
spring:
  datasource:
    druid:
      test-while-idle: false
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/lego?serverTimezone=Asia/Shanghai
      username: root
      password: 12345678
      # 初始化多少连接
      initial-size: 10
      # 最多支持多少个活动会话
      max-active: 50
      # 请求超时毫秒数
      max-wait: 100
    # 使用resources/sql下的sql文件自动建表
    schema: classpath:sql/create.sql
    # 使用resources/sql下的data文件创建测试数据
    data: classpath:sql/data.sql
    #initialization-mode: always

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 2000
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0

  http:
    encoding:
      force: true
      charset: UTF-8
      enabled: true


lego:
  images:
    # 文件保存在本地的哪个文件夹内，这里换成本机上的地址
    path: /Users/zhangxiaoye/Downloads/lego-img/
    # 分别存储商品的哪几种图片
    names: display,intro
    # 设置保存在服务器端的图片的尺寸大小
    height: 500
    width: 500
  app:
    # 小程序相关参数
#    appid: wx5ecf42a219287bca
    appid: wxa4b82aa3f2b0b4b4
#    appsecret: 9ddad395d6b70216539a55c4cc6a4941
    appsecret: d08c0b6f6a429c58efa00c0117f32d76
    authurl: https://api.weixin.qq.com/sns/jscode2session
  qiniu:
    ak: A1v6koiMUF8Oi6quuPNW6zaYTKXjrBipgEFse-8l
    sk: HLgJVQ9GwetOQ1U-AQcG6IR7N88ai4ysf87sseib
    bucket: zxyono
    cdn: http://qavqpe40f.bkt.clouddn.com/
  token:
    expirationMilliSeconds: 7200000



